/**
 * FlexibleForm ControlsRenderer sample config.
 *
 * Assumptions and simplifications made for this POC:
 *
 * @type {*[]}
 */
export const formConfigSamples = [
  // Match profiles form
  {
    id: 'form-match-profiles',
    name: 'matchProfilesForm',
    caption: 'ui-data-import.summary',
    template: 'simple',
    staticNamespace: '',
    editableNamespace: 'profile',
    dataAttributes: {},
    // Common Sections Block:
    commonSections: [{ // Incoming MARC Field section
      controlType: 'Section',
      staticControlType: 'Section',
      id: '**ns**-record-field',
      sectionKey: 'fieldMarc',
      name: '**ns**MatchExpression',
      label: 'ui-data-import.match.**ns**.record.field',
      optional: false,
      classNames: ['field', 'input-container'],
      dataAttributes: {},
      childControls: [{
        controlType: 'Row',
        staticControlType: 'Row',
        childControls: [{
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 3,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            component: 'TextField',
            id: 'criterion-**ns**.field.main',
            name: 'matchDetails[##ri##].**ns**MatchExpression.fields[0].value',
            label: 'ui-data-import.match.**ns**.MARC.field-main',
            validate: ['validateValueType', 'validateValueLength3'],
            dataAttributes: { 'data-test-field-main': '' },
          }],
        }, {
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 2,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            component: 'TextField',
            id: 'criterion-**ns**.field.in1',
            name: 'matchDetails[##ri##].**ns**MatchExpression.fields[1].value',
            label: 'ui-data-import.match.**ns**.MARC.field-in1',
            validate: ['validateValueType', 'validateValueLength1'],
            dataAttributes: { 'data-test-field-in1': '' },
          }],
        }, {
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 2,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            component: 'TextField',
            id: 'criterion-**ns**.field.in2',
            name: 'matchDetails[##ri##].**ns**MatchExpression.fields[2].value',
            label: 'ui-data-import.match.**ns**.MARC.field-in2',
            validate: ['validateValueType', 'validateValueLength1'],
            dataAttributes: { 'data-test-field-in2': '' },
          }],
        }, {
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 5,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            component: 'TextField',
            id: 'criterion-**ns**.field.subfield',
            name: 'matchDetails[##ri##].**ns**MatchExpression.fields[3].value',
            label: 'ui-data-import.match.**ns**.MARC.field-subfield',
            validate: ['validateValueType', 'validateValueLength1'],
            dataAttributes: { 'data-test-field-subfield': '' },
          }],
        }],
      }],
    }, {
      controlType: 'Section',
      sectionKey: 'fieldInstance',
      staticControlType: 'Section',
      label: 'ui-data-import.match.**ns**.record.field',
      id: '**ns**-record-field',
      optional: false,
      classNames: ['field', 'input-container'],
      dataAttributes: {},
      childControls: [{
        controlType: 'Row',
        staticControlType: 'Row',
        childControls: [{
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 12,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            id: 'criterion-value-type',
            name: 'matchDetails[##ri##].**ns**MatchExpression.fields[0].value',
            label: '',
            component: 'Selection',
            placeholder: '',
            dataOptions: [],
            validate: null,
            dataAttributes: {},
          }],
        }],
      }],
    }, {
      controlType: 'Section',
      sectionKey: 'staticValueType',
      staticControlType: 'Section',
      label: '',
      id: '**ns**-static-value-type',
      optional: false,
      classNames: ['input-container', 'static-section'],
      dataAttributes: { 'data-test-static-value-section': '' },
      childControls: [{
        controlType: 'Row',
        staticControlType: 'Row',
        childControls: [{
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 3,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            id: 'criterion-static-value-type',
            name: 'matchDetails[##ri##].**ns**MatchExpression.staticValueDetails.staticValueType',
            label: '',
            component: 'Select',
            dataOptions: [{
              value: 'TEXT',
              label: 'ui-data-import.match.**ns**.static.value-type.text',
            }, {
              value: 'NUMBER',
              label: 'ui-data-import.match.**ns**.static.value-type.number',
            }, {
              value: 'EXACT_DATE',
              label: 'ui-data-import.match.**ns**.static.value-type.date',
            }, {
              value: 'DATE_RANGE',
              label: 'ui-data-import.match.**ns**.static.value-type.date-range',
            }],
            placeholder: '',
            validate: null,
            dataAttributes: { 'data-test-select-static-value': '' },
          }],
        }, {
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 9,
          childControls: [{
            controlType: 'CommonSection',
            id: 'section-incoming-static-value-text',
            stateField: 'staticValueType',
            sectionNamespace: 'incoming',
            acceptedSections: {
              TEXT: 'staticValueText',
              NUMBER: 'staticValueNumber',
              EXACT_DATE: 'staticValueExactDate',
              DATE_RANGE: 'staticValueDateRange',
            },
          }],
        }],
      }],
    }, {
      sectionKey: 'staticValueText',
      controlType: 'Field',
      staticControlType: 'KeyValue',
      id: 'criterion-static-value-text',
      name: 'matchDetails[##ri##].**ns**MatchExpression.staticValueDetails.text',
      label: '',
      component: 'TextField',
      placeholder: '',
      validate: null,
      dataAttributes: { 'data-test-static-text-field': '' },
    }, {
      sectionKey: 'staticValueNumber',
      controlType: 'Field',
      staticControlType: 'KeyValue',
      id: 'criterion-static-value-number',
      name: 'matchDetails[##ri##].**ns**MatchExpression.staticValueDetails.number',
      label: '',
      component: 'TextField',
      type: 'number',
      placeholder: '',
      validate: null,
      dataAttributes: { 'data-test-static-number-field': '' },
    }, {
      sectionKey: 'staticValueExactDate',
      controlType: 'Layout',
      staticControlType: 'Layout',
      label: '',
      id: '**ns**-static-value-exact-date',
      className: 'display-flex',
      dataAttributes: { 'data-test-static-exact-date-wrapper': '' },
      childControls: [{
        controlType: 'Field',
        staticControlType: 'KeyValue',
        dataType: 'date',
        id: 'criterion-static-value-exact-date',
        name: 'matchDetails[##ri##].**ns**MatchExpression.staticValueDetails.exactDate',
        label: '',
        component: 'Datepicker',
        dateFormat: 'YYYY-MM-DD',
        placeholder: '',
        validate: null,
        dataAttributes: { 'data-test-static-exact-date-field': '' },
      }],
    }, {
      sectionKey: 'staticValueDateRange',
      controlType: 'Layout',
      staticControlType: 'Layout',
      label: '',
      id: '**ns**-static-value-date-range',
      className: 'display-flex',
      dataAttributes: { 'data-test-static-date-range-field': '' },
      childControls: [{
        controlType: 'Headline',
        staticControlType: 'Headline',
        weight: 'regular',
        margin: 'none',
        classNames: ['date-range-label'],
        childControls: [{
          controlType: 'FormattedMessage',
          staticControlType: 'FormattedMessage',
          id: 'ui-data-import.from',
        }],
      }, {
        controlType: 'Field',
        staticControlType: 'KeyValue',
        dataType: 'date',
        id: 'criterion-static-value-from-date',
        name: 'matchDetails[##ri##].**ns**MatchExpression.staticValueDetails.fromDate',
        component: 'Datepicker',
        dateFormat: 'YYYY-MM-DD',
        validate: null,
        dataAttributes: { 'data-test-static-from-date-field': '' },
      }, {
        controlType: 'Headline',
        staticControlType: 'Headline',
        weight: 'regular',
        margin: 'none',
        classNames: ['date-range-label'],
        childControls: [{
          controlType: 'FormattedMessage',
          staticControlType: 'FormattedMessage',
          id: 'ui-data-import.to',
        }],
      }, {
        controlType: 'Field',
        staticControlType: 'KeyValue',
        dataType: 'date',
        id: 'criterion-static-value-to-date',
        name: 'matchDetails[##ri##].**ns**MatchExpression.staticValueDetails.toDate',
        component: 'Datepicker',
        dateFormat: 'YYYY-MM-DD',
        validate: null,
        dataAttributes: { 'data-test-static-to-date-field': '' },
      }],
    }, {
      controlType: 'Section',
      sectionKey: 'qualifier',
      staticControlType: 'Section',
      label: 'ui-data-import.match.**ns**.qualifier',
      name: '**ns**Qualifier',
      optional: true,
      isOpen: false,
      classNames: ['qualifier', 'input-container'],
      dataAttributes: { 'data-test-qualifier': '' },
      childControls: [{
        controlType: 'Row',
        staticControlType: 'Row',
        childControls: [{
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 4,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            id: 'criterion-**ns**.qualifier.term',
            name: 'matchDetails[##ri##].**ns**MatchExpression.qualifier.qualifierType',
            component: 'Select',
            placeholder: 'ui-data-import.match.qualifier.placeholder',
            dataOptions: [{
              value: 'BEGINS_WITH',
              label: 'ui-data-import.match.qualifier.begins-with',
            }, {
              value: 'ENDS_WITH',
              label: 'ui-data-import.match.qualifier.ends-with',
            }, {
              value: 'CONTAINS',
              label: 'ui-data-import.match.qualifier.contains',
            }],
            validate: null,
            dataAttributes: { 'data-test-field-qualifier-type': '' },
          }],
        }, {
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 8,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            id: 'criterion-**ns**.qualifier.value',
            name: 'matchDetails[##ri##].**ns**MatchExpression.qualifier.qualifierValue',
            component: 'TextField',
            placeholder: '',
            validate: null,
            dataAttributes: { 'data-test-field-qualifier-value': '' },
          }],
        }],
      }],
    }, {
      controlType: 'Section',
      sectionKey: 'qualifierPart',
      staticControlType: 'Section',
      label: 'ui-data-import.match.**ns**.part',
      optional: true,
      isOpen: false,
      classNames: ['part', 'input-container'],
      dataAttributes: { 'data-test-part': '' },
      childControls: [{
        controlType: 'Row',
        staticControlType: 'Row',
        childControls: [{
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 4,
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            id: 'criterion-**ns**.qualifier.term',
            name: 'matchDetails[##ri##].**ns**MatchExpression.qualifier.comparisonPart',
            label: '',
            component: 'Select',
            placeholder: 'ui-data-import.match.comparison-part.placeholder',
            dataOptions: [{
              value: 'NUMERICS_ONLY',
              label: 'ui-data-import.match.comparison-part.numerics-only',
            }, {
              value: 'ALPHANUMERICS_ONLY',
              label: 'ui-data-import.match.comparison-part.alpha-numerics-only',
            }],
            validate: null,
            dataAttributes: { 'data-test-compare-part': '' },
          }],
        }],
      }],
    }],
    childControls: [{
      controlType: 'Headline',
      staticControlType: 'Fragment',
      id: 'profile-headline',
      size: 'xx-large',
      tag: 'h2',
      dataAttributes: { 'data-test-header-title': true },
    }, {
      controlType: 'AccordionSet',
      staticControlType: 'AccordionSet',
      dataAttributes: {},
      childControls: [{
        controlType: 'Accordion',
        staticControlType: 'Fragment',
        id: 'summary',
        collapsed: false,
        separator: false,
        label: 'ui-data-import.summary',
        dataAttributes: {},
        childControls: [{
          controlType: 'Field',
          staticControlType: 'Fragment',
          component: 'TextField',
          name: 'name',
          label: 'ui-data-import.name',
          required: true,
          validate: ['validateRequiredField'],
          dataAttributes: { 'data-test-name-field': '' },
        }, {
          controlType: 'Field',
          staticControlType: 'Fragment',
          component: 'TextArea',
          name: 'description',
          label: 'ui-data-import.description',
          validate: null,
          dataAttributes: { 'data-test-description-field': '' },
        }],
      }, {
        controlType: 'Accordion',
        staticControlType: 'Accordion',
        id: 'match-profile-details',
        collapsed: false,
        separator: false,
        label: 'ui-data-import.details',
        dataAttributes: {},
        childControls: [{
          controlType: 'RecordTypesSelect',
          staticControlType: 'RecordTypesSelect',
          id: 'panel-existing',
          name: 'existingType',
          label: 'ui-data-import.record-type.existing',
          required: true,
          validate: null,
          dataAttributes: {},
        }, { // Match Criteria Set section
          controlType: 'Accordion',
          staticControlType: 'Accordion',
          id: 'match-criteria',
          collapsed: false,
          separator: null,
          label: 'ui-data-import.match.criteria',
          dataAttributes: {},
          childControls: [{
            controlType: 'Section',
            staticControlType: 'Section',
            optional: false,
            classNames: ['match-criteria'],
            repeatable: true,
            canAdd: false,
            canDelete: false,
            name: 'matchDetails',
            fields: 'matchDetails',
            fieldsPath: 'matchDetails',
            emptyMessage: 'EMPTY FIELDS HERE',
            dataAttributes: {},
            childControls: [{ // Match Criterions List (array)
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              label: 'ui-data-import.match.criterion',
              collapsed: false,
              separator: null,
              childControls: [{
                controlType: 'Section',
                staticControlType: 'Section',
                optional: false,
                classNames: ['match-criterion'],
                dataAttributes: {},
                childControls: [{ // Incoming Record Section
                  controlType: 'Section',
                  staticControlType: 'Section',
                  label: 'ui-data-import.match.incoming.record',
                  id: 'incoming-record-section',
                  optional: false,
                  classNames: ['incoming'],
                  dataAttributes: {},
                  childControls: [{
                    controlType: 'CommonSection',
                    id: 'section-incoming-field',
                    stateField: 'incomingRecord',
                    sectionNamespace: 'incoming',
                    acceptedSections: {
                      MARC_BIBLIOGRAPHIC: 'fieldMarc',
                      MARC_HOLDINGS: 'fieldMarc',
                      MARC_AUTHORITY: 'fieldMarc',
                      STATIC_VALUE: 'staticValueType',
                    },
                  }, {
                    controlType: 'CommonSection',
                    id: 'section-incoming-qualifier',
                    stateField: 'incomingRecord',
                    sectionNamespace: 'incoming',
                    acceptedSections: {
                      MARC_BIBLIOGRAPHIC: 'qualifier',
                      MARC_HOLDINGS: 'qualifier',
                      MARC_AUTHORITY: 'qualifier',
                      EDIFACT_INVOICE: 'qualifier',
                      DELIMITED: 'qualifier',
                    },
                  }, {
                    controlType: 'CommonSection',
                    id: 'section-incoming-qualifier-part',
                    stateField: 'incomingRecord',
                    sectionNamespace: 'incoming',
                    acceptedSections: {
                      MARC_BIBLIOGRAPHIC: 'qualifierPart',
                      MARC_HOLDINGS: 'qualifierPart',
                      MARC_AUTHORITY: 'qualifierPart',
                      EDIFACT_INVOICE: 'qualifierPart',
                      DELIMITED: 'qualifierPart',
                    },
                  }],
                }, { // Match Criterion Section
                  controlType: 'Section',
                  staticControlType: 'Section',
                  label: 'ui-data-import.match.criterion',
                  name: 'matchCriterion',
                  optional: false,
                  classNames: ['criterion-section', 'input-container'],
                  dataAttributes: {},
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'Select',
                        id: 'criterion##ri##-criterion-type',
                        name: 'matchDetails[##ri##].matchCriterion',
                        label: '',
                        placeholder: '',
                        dataOptions: [{
                          value: 'EXACTLY_MATCHES',
                          label: 'ui-data-import.match.criterion-type.exactly-matches',
                        }, {
                          value: 'EXISTING_VALUE_CONTAINS_INCOMING_VALUE',
                          label: 'ui-data-import.match.criterion-type.existing-contains-incoming',
                        }, {
                          value: 'INCOMING_VALUE_CONTAINS_EXISTING_VALUE',
                          label: 'ui-data-import.match.criterion-type.incoming-contains-existing',
                        }, {
                          value: 'EXISTING_VALUE_BEGINS_WITH_INCOMING_VALUE',
                          label: 'ui-data-import.match.criterion-type.existing-begins-with-incoming',
                        }, {
                          value: 'INCOMING_VALUE_BEGINS_WITH_EXISTING_VALUE',
                          label: 'ui-data-import.match.criterion-type.incoming-begins-with-existing',
                        }, {
                          value: 'EXISTING_VALUE_ENDS_WITH_INCOMING_VALUE',
                          label: 'ui-data-import.match.criterion-type.existing-ends-with-incoming',
                        }, {
                          value: 'INCOMING_VALUE_ENDS_WITH_EXISTING_VALUE',
                          label: 'ui-data-import.match.criterion-type.incoming-ends-with-existing',
                        }],
                        validate: null,
                        dataAttributes: { 'data-test-match-criterion': '' },
                      }],
                    }],
                  }],
                }, { // Existing Record Section
                  controlType: 'Section',
                  staticControlType: 'Section',
                  label: 'ui-data-import.match.existing.record',
                  id: 'existing-record-section',
                  optional: false,
                  classNames: ['existing'],
                  dataAttributes: {},
                  childControls: [{
                    controlType: 'CommonSection',
                    id: 'section-existing-field',
                    stateField: 'existingRecord',
                    sectionNamespace: 'existing',
                    acceptedSections: {
                      INSTANCE: 'fieldInstance',
                      HOLDINGS: 'fieldInstance',
                      ITEM: 'fieldInstance',
                      ORDER: 'fieldInstance',
                      INVOICE: 'fieldInstance',
                      MARC_BIBLIOGRAPHIC: 'fieldMarc',
                      MARC_HOLDINGS: 'fieldMarc',
                      MARC_AUTHORITY: 'fieldMarc',
                      STATIC_VALUE: 'fieldStatic',
                    },
                  }, {
                    controlType: 'CommonSection',
                    id: 'section-existing-qualifier',
                    stateField: 'existingRecord',
                    sectionNamespace: 'existing',
                    acceptedSections: {
                      INSTANCE: 'qualifier',
                      HOLDINGS: 'qualifier',
                      ITEM: 'qualifier',
                      ORDER: 'qualifier',
                      INVOICE: 'qualifier',
                      MARC_BIBLIOGRAPHIC: 'qualifier',
                      MARC_HOLDINGS: 'qualifier',
                      MARC_AUTHORITY: 'qualifier',
                      EDIFACT_INVOICE: 'qualifier',
                      DELIMITED: 'qualifier',
                    },
                  }, {
                    controlType: 'CommonSection',
                    id: 'section-existing-qualifier-part',
                    stateField: 'existingRecord',
                    sectionNamespace: 'existing',
                    acceptedSections: {
                      INSTANCE: 'qualifierPart',
                      HOLDINGS: 'qualifierPart',
                      ITEM: 'qualifierPart',
                      ORDER: 'qualifierPart',
                      INVOICE: 'qualifierPart',
                      MARC_BIBLIOGRAPHIC: 'qualifierPart',
                      MARC_HOLDINGS: 'qualifierPart',
                      MARC_AUTHORITY: 'qualifierPart',
                      EDIFACT_INVOICE: 'qualifierPart',
                      DELIMITED: 'qualifierPart',
                    },
                  }],
                }],
              }],
            }],
          }],
        }],
      }],
    }, {
      controlType: 'ConfirmationModal',
      staticControlType: 'Fragment',
      id: 'confirm-edit-match-profile-modal',
      dataAttributes: {},
    }],
  },
  // Mapping profiles form
  {
    id: 'form-mapping-profiles',
    name: 'mappingProfilesForm',
    caption: 'ui-data-import.summary',
    template: 'simple',
    staticNamespace: '',
    editableNamespace: 'profile',
    dataAttributes: {},
    // common Sections:
    commonSections: [{ // mapping details Item section
      controlType: 'Row',
      staticControlType: 'Row',
      between: 'xs',
      id: 'mapping-details-item',
      sectionKey: 'mappingDetailsItem',
      name: 'mappingDetailsItem',
      classNames: [],
      dataAttributes: {},
      childControls: [{
        controlType: 'Col',
        staticControlType: 'Col',
        xs: 12,
        childControls: [{
          controlType: 'AccordionStatus',
          staticControlType: 'AccordionStatus',
          childControls: [{
            controlType: 'Row',
            staticControlType: 'Row',
            between: 'xs',
            childControls: [{
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'MappedHeader',
                staticControlType: 'MappedHeader',
                mappedLabelId: 'ui-data-import.settings.profiles.select.mappingProfiles',
                mappedLabel: 'Field mapping',
                mappableLabelId: 'ui-data-import.settings.mappingProfiles.map.item',
                mappableLabel: 'Item',
                headlineProps: { margin: 'small' },
              }],
            }, {
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'div',
                staticControlType: 'div',
                dataAttributes: { 'data-test-expand-all-button': '' },
                childControls: [{
                  controlType: 'ExpandAllButton',
                  staticControlType: 'ExpandAllButton',
                }],
              }],
            }],
          }, {
            controlType: 'AccordionSet',
            staticControlType: 'AccordionSet',
            dataAttributes: {},
            childControls: [{ // Administrative data accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'administrative-data',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-suppress-from-discovery': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'Checkbox',
                    label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.discoverySuppress',
                    name: 'mappingDetails.mappingFields[0].booleanFieldAction',
                    decorator: 'withBooleanActions',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 3,
                  dataAttributes: { 'data-test-item-hrid': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.administrativeData.field.hrid',
                    name: 'mappingDetails.mappingFields[1].value',
                    disabled: true, // @TODO: Possible change this for some programmatic status check
                    enabled: false,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 3,
                  dataAttributes: { 'data-test-barcode': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.administrativeData.field.barcode',
                    name: 'mappingDetails.mappingFields[2].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 3,
                  dataAttributes: { 'data-test-accession-number': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.administrativeData.field.accessionNumber',
                    name: 'mappingDetails.mappingFields[3].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 3,
                  dataAttributes: { 'data-test-item-identifier': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.administrativeData.field.itemIdentifier',
                    name: 'mappingDetails.mappingFields[4].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-former-ids',
                  name: 'formerIds',
                  fields: 'formerIds',
                  fieldsPath: 'mappingDetails.mappingFields[5].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.item.administrativeData.field.formerId.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.item.administrativeData.field.formerId.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[5].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['formerId'],
                  columnMapping: { formerId: 'ui-data-import.settings.mappingProfiles.map.item.administrativeData.field.formerId' },
                  mclColumnPaths: {
                    formerId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-former-ids': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.item.administrativeData.field.formerId',
                        name: 'mappingDetails.mappingFields[5].subfields[##ri##].fields[0].value',
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-statistical-code-ids',
                  name: 'statisticalCodeIds',
                  label: '',
                  fields: 'statisticalCodeIds',
                  fieldsPath: 'mappingDetails.mappingFields[6].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCodes.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCodes.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[6].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['statisticalCodeId'],
                  columnMapping: { statisticalCodeId: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCode' },
                  mclColumnPaths: {
                    statisticalCodeId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-statistical-codes': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      dataAttributes: { 'data-test-statistical-code': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCode',
                        name: 'mappingDetails.mappingFields[6].subfields[##ri##].fields[0].value',
                        fieldsPath: 'mappingDetails.mappingFields[6].subfields[##ri##].fields[0].acceptedValues',
                        fields: 'statisticalCodeIds',
                        optionValue: 'name',
                        optionLabel: 'name',
                        optionTemplate: '**statisticalCodeTypeName**: **code** - **name**',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/statistical-codes?limit=2000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'statisticalCodes',
                        }, {
                          wrapperSourceLink: '/statistical-code-types?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'statisticalCodeTypes',
                        }],
                        wrapperSourcesFn: 'statisticalCodeTypeName',
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Item data accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'item-data',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.item.itemData.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-material-type': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    enabled: true,
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemData.field.materialType',
                    name: 'mappingDetails.mappingFields[7].value',
                    fieldsPath: 'mappingDetails.mappingFields[7].acceptedValues',
                    fields: 'materialType.id',
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/material-types?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'mtypes',
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-copy-number': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.copyNumber',
                    name: 'mappingDetails.mappingFields[8].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-call-number-type': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    enabled: true,
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.callNumberType',
                    name: 'mappingDetails.mappingFields[9].value',
                    fieldsPath: 'mappingDetails.mappingFields[9].acceptedValues',
                    fields: 'itemLevelCallNumberTypeId',
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/call-number-types?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'callNumberTypes',
                    }],
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 2,
                  dataAttributes: { 'data-test-call-number-prefix': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.callNumberPrefix',
                    name: 'mappingDetails.mappingFields[10].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 2,
                  dataAttributes: { 'data-test-call-number': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.callNumber',
                    name: 'mappingDetails.mappingFields[11].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 2,
                  dataAttributes: { 'data-test-call-number-suffix': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.callNumberSuffix',
                    name: 'mappingDetails.mappingFields[12].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-number-of-pieces': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemData.field.numberOfPieces',
                    name: 'mappingDetails.mappingFields[13].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-description-of-pieces': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemData.field.descriptionOfPieces',
                    name: 'mappingDetails.mappingFields[14].value',
                    enabled: true,
                  }],
                }],
              }],
            }, { // Enumeration data accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'enumeration-data',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.item.enumerationData.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-enumeration': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.enumeration',
                    name: 'mappingDetails.mappingFields[15].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-chronology': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.chronology',
                    name: 'mappingDetails.mappingFields[16].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-volume': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.enumerationData.field.volume',
                    name: 'mappingDetails.mappingFields[17].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-year-caption',
                  name: 'yearCaption',
                  label: '',
                  fields: 'yearCaption',
                  fieldsPath: 'mappingDetails.mappingFields[18].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.item.enumerationData.field.yearCaption',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.item.enumerationData.field.yearCaption.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[18].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['yearCaption'],
                  columnMapping: { yearCaption: 'ui-data-import.settings.mappingProfiles.map.item.enumerationData.field.yearCaption' },
                  mclColumnPaths: {
                    yearCaption: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-years-and-captions': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.item.enumerationData.field.yearCaption',
                        name: 'mappingDetails.mappingFields[18].subfields[##ri##].fields[0].value',
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Item condition accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'item-condition',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.item.itemCondition.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-missing-pieces-number': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemCondition.field.numberOfMissingPieces',
                    name: 'mappingDetails.mappingFields[19].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-missing-pieces': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemCondition.field.missingPieces',
                    name: 'mappingDetails.mappingFields[20].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-date': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    enabled: true,
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemCondition.field.missingPiecesDate',
                    name: 'mappingDetails.mappingFields[21].value',
                    decorator: 'withDatePicker',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    validate: ['validateMARCWithDate'],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-item-damaged-status': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    enabled: true,
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemCondition.field.itemDamagedStatus',
                    name: 'mappingDetails.mappingFields[22].value',
                    fieldsPath: 'mappingDetails.mappingFields[22].acceptedValues',
                    fields: 'itemDamagedStatusId',
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/item-damaged-statuses?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'itemDamageStatuses',
                    }],
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-date2': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    enabled: true,
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemCondition.field.itemDamagedStatusDate',
                    name: 'mappingDetails.mappingFields[23].value',
                    decorator: 'withDatePicker',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    validate: ['validateMARCWithDate'],
                  }],
                }],
              }],
            }, { // Item notes accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'item-notes',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.item.itemNotes.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-item-notes',
                  name: 'notes',
                  label: '',
                  fields: 'notes',
                  fieldsPath: 'mappingDetails.mappingFields[24].subfields',
                  incrementalField: 'order',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.item.field.notes.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[24].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['itemNoteTypeId', 'note', 'staffOnly'],
                  columnMapping: {
                    itemNoteTypeId: 'ui-data-import.settings.mappingProfiles.map.field.notes.noteType',
                    note: 'ui-data-import.settings.mappingProfiles.map.field.notes.note',
                    staffOnly: 'ui-data-import.settings.mappingProfiles.map.field.notes.staffOnly',
                  },
                  mclColumnPaths: {
                    itemNoteTypeId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    note: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    staffOnly: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].booleanFieldAction',
                    },
                  },
                  dataAttributes: { 'data-test-item-notes': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      dataAttributes: { 'data-test-item-note': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.noteType',
                        name: 'mappingDetails.mappingFields[24].subfields[##ri##].fields[0].value',
                        fieldsPath: 'mappingDetails.mappingFields[24].subfields[##ri##].fields[0].acceptedValues',
                        fields: 'notes',
                        optionValue: 'name',
                        optionLabel: 'name',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/item-note-types?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'itemNoteTypes',
                        }],
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.note',
                        name: 'mappingDetails.mappingFields[24].subfields[##ri##].fields[1].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      dataAttributes: { 'data-test-staff-only': '' },
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'Checkbox',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.staffOnly',
                        name: 'mappingDetails.mappingFields[24].subfields[##ri##].fields[2].booleanFieldAction',
                        decorator: 'withBooleanActions',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Item loans accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'item-loans',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.item.itemLoans.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-permanent-loan-type': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    enabled: true,
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemLoans.field.loanTypePermanentRequired',
                    name: 'mappingDetails.mappingFields[25].value',
                    fieldsPath: 'mappingDetails.mappingFields[25].acceptedValues',
                    fields: 'permanentLoanType.id',
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/loan-types?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'loantypes',
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-temporary-loan-type': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    enabled: true,
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemLoans.field.loanTypeTemporary',
                    name: 'mappingDetails.mappingFields[26].value',
                    fieldsPath: 'mappingDetails.mappingFields[26].acceptedValues',
                    fields: 'temporaryLoanType.id',
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/loan-types?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'loantypes',
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-status': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    enabled: true,
                    component: 'TextField',
                    id: 'item-status',
                    label: 'ui-data-import.settings.mappingProfiles.map.item.itemLoans.field.loanStatus',
                    name: 'mappingDetails.mappingFields[27].value',
                    optionValue: 'value',
                    optionLabel: 'label',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-circulation-notes',
                  name: 'circulationNotes',
                  label: '',
                  fields: 'circulationNotes',
                  fieldsPath: 'mappingDetails.mappingFields[28].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.item.field.circulationNotes.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.item.field.circulationNotes.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[28].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['noteType', 'note', 'staffOnly'],
                  columnMapping: {
                    noteType: 'ui-data-import.settings.mappingProfiles.map.field.notes.noteType',
                    note: 'ui-data-import.settings.mappingProfiles.map.field.notes.note',
                    staffOnly: 'ui-data-import.settings.mappingProfiles.map.field.notes.staffOnly',
                  },
                  mclColumnPaths: {
                    noteType: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    note: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    staffOnly: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].booleanFieldAction',
                    },
                  },
                  dataAttributes: { 'data-test-circulation-notes': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      dataAttributes: { 'data-test-circulation-note': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.noteType',
                        name: 'mappingDetails.mappingFields[28].subfields[##ri##].fields[0].value',
                        fieldsPath: 'mappingDetails.mappingFields[28].subfields[##ri##].fields[0].acceptedValues',
                        fields: 'notes',
                        optionValue: 'name',
                        optionLabel: 'name',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/item-note-types?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'itemNoteTypes',
                        }],
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.note',
                        name: 'mappingDetails.mappingFields[28].subfields[##ri##].fields[1].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      dataAttributes: { 'data-test-staff-only': '' },
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'Checkbox',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.staffOnly',
                        name: 'mappingDetails.mappingFields[28].subfields[##ri##].fields[2].booleanFieldAction',
                        decorator: 'withBooleanActions',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Item location accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'item-location',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.location.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-permanent': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    enabled: true,
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.location.field.permanent',
                    name: 'mappingDetails.mappingFields[29].value',
                    fieldsPath: 'mappingDetails.mappingFields[29].acceptedValues',
                    fields: 'permanentLocation.id',
                    optionValue: 'name',
                    optionLabel: 'name',
                    optionTemplate: '**name** (**code**)',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/locations?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'locations',
                    }],
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-temporary': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    enabled: true,
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.location.field.temporary',
                    name: 'mappingDetails.mappingFields[30].value',
                    fieldsPath: 'mappingDetails.mappingFields[30].acceptedValues',
                    fields: 'temporaryLocation.id',
                    optionValue: 'name',
                    optionLabel: 'name',
                    optionTemplate: '**name** (**code**)',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/locations?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'locations',
                    }],
                  }],
                }],
              }],
            }, { // Item electronic access accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'item-electronic-access',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.EAccess.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-electronic-access',
                  name: 'electronicAccess',
                  fields: 'electronicAccess',
                  fieldsPath: 'mappingDetails.mappingFields[31].subfields',
                  incrementalField: 'order',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.field.EAccess.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[31].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['relationshipId', 'uri', 'linkText', 'materialsSpecification', 'publicNote'],
                  columnMapping: {
                    relationshipId: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.relationship',
                    uri: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.uri',
                    linkText: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.linkText',
                    materialsSpecification: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.materialsSpecified',
                    publicNote: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.urlPublicNote',
                  },
                  mclColumnPaths: {
                    relationshipId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    uri: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    linkText: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].value',
                    },
                    materialsSpecification: {
                      namePath: 'fields[3].name',
                      valuePath: 'fields[3].value',
                    },
                    publicNote: {
                      namePath: 'fields[4].name',
                      valuePath: 'fields[4].value',
                    },
                  },
                  dataAttributes: { 'data-test-electronic-access': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      dataAttributes: { 'data-test-electronic-relationship': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.relationship',
                        name: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[0].value',
                        fieldsPath: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[0].acceptedValues',
                        fields: 'electronicAccess',
                        optionValue: 'name',
                        optionLabel: 'name',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/electronic-access-relationships?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'electronicAccessRelationships',
                        }],
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.uri',
                        name: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[1].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.linkText',
                        name: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[2].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.materialsSpecified',
                        name: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[3].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.urlPublicNote',
                        name: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[4].value',
                      }],
                    }],
                  }],
                }],
              }],
            }],
          }],
        }],
      }],
    }, { // mapping details Instance section
      controlType: 'Row',
      staticControlType: 'Row',
      between: 'xs',
      id: 'mapping-details-instance',
      sectionKey: 'mappingDetailsInstance',
      name: 'mappingDetailsInstance',
      classNames: [],
      dataAttributes: {},
      childControls: [{
        controlType: 'Col',
        staticControlType: 'Col',
        xs: 12,
        childControls: [{
          controlType: 'AccordionStatus',
          staticControlType: 'AccordionStatus',
          childControls: [{
            controlType: 'Row',
            staticControlType: 'Row',
            between: 'xs',
            childControls: [{
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'MappedHeader',
                staticControlType: 'MappedHeader',
                mappedLabelId: 'ui-data-import.settings.profiles.select.mappingProfiles',
                mappedLabel: 'Field mapping',
                mappableLabelId: 'ui-data-import.settings.mappingProfiles.map.instance',
                mappableLabel: 'Instance',
                headlineProps: { margin: 'small' },
              }],
            }, {
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'div',
                staticControlType: 'div',
                dataAttributes: { 'data-test-expand-all-button': '' },
                childControls: [{
                  controlType: 'ExpandAllButton',
                  staticControlType: 'ExpandAllButton',
                }],
              }],
            }],
          }, {
            controlType: 'AccordionSet',
            staticControlType: 'AccordionSet',
            dataAttributes: {},
            childControls: [{ // Administrative data accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'administrative-data',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-suppress-from-discovery': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'Checkbox',
                    label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.discoverySuppress',
                    name: 'mappingDetails.mappingFields[0].booleanFieldAction',
                    decorator: 'withBooleanActions',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-staff-suppress': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'Checkbox',
                    label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.staffSuppress',
                    name: 'mappingDetails.mappingFields[1].booleanFieldAction',
                    decorator: 'withBooleanActions',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                    dataAttributes: { 'data-test-staff-suppress': '' },
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-previously-held': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'Checkbox',
                    label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.previouslyHeld',
                    name: 'mappingDetails.mappingFields[2].booleanFieldAction',
                    decorator: 'withBooleanActions',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                    dataAttributes: { 'data-test-previously-held': '' },
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-instance-hrid': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.instance.administrationData.field.hrid',
                    name: 'mappingDetails.mappingFields[3].value',
                    disabled: true, // @TODO: Remove this in favour of data-driven status calculation
                    enabled: false,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-metadata-source': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.instance.administrationData.field.source',
                    name: 'mappingDetails.mappingFields[4].value',
                    disabled: true, // @TODO: Remove this in favour of data-driven status calculation
                    enabled: false,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-cataloged-date': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    enabled: true,
                    label: 'ui-data-import.settings.mappingProfiles.map.instance.administrationData.field.catalogedDate',
                    name: 'mappingDetails.mappingFields[5].value',
                    decorator: 'withDatePicker',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    validate: ['validateMARCWithDate'],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  dataAttributes: { 'data-test-status-term': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.instance.administrationData.field.statusId',
                    name: 'mappingDetails.mappingFields[6].value',
                    fieldsPath: 'mappingDetails.mappingFields[6].acceptedValues',
                    fields: 'statusId',
                    enabled: true,
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/instance-statuses?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'instanceStatuses',
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  dataAttributes: { 'data-test-mode-of-issuance': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.instance.administrationData.field.modeOfIssuanceId',
                    name: 'mappingDetails.mappingFields[7].value',
                    disabled: true, // @TODO: Remove this in favour of data-driven status calculation
                    enabled: false,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-statistical-code-ids',
                  name: 'statisticalCodeIds',
                  label: '',
                  fields: 'statisticalCodeIds',
                  fieldsPath: 'mappingDetails.mappingFields[8].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCodes.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCodes.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[8].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['statisticalCodeId'],
                  columnMapping: { statisticalCodeId: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCode' },
                  mclColumnPaths: {
                    statisticalCodeId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-statistical-codes': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      dataAttributes: { 'data-test-statistical-code': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCode',
                        name: 'mappingDetails.mappingFields[8].subfields[##ri##].fields[0].value',
                        fieldsPath: 'mappingDetails.mappingFields[8].subfields[##ri##].fields[0].acceptedValues',
                        fields: 'statisticalCodeIds',
                        optionValue: 'name',
                        optionLabel: 'name',
                        optionTemplate: '**statisticalCodeTypeName**: **code** - **name**',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/statistical-codes?limit=2000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'statisticalCodes',
                        }, {
                          wrapperSourceLink: '/statistical-code-types?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'statisticalCodeTypes',
                        }],
                        wrapperSourcesFn: 'statisticalCodeTypeName',
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Title data accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'title-data',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.instance.titleData.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  dataAttributes: { 'data-test-resource-title': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.instance.titleData.field.title',
                    name: 'mappingDetails.mappingFields[9].value',
                    disabled: true, // @TODO: Remove this in favour of data-driven status calculation
                    enabled: false,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-alternative-titles',
                  name: 'alternativeTitles',
                  label: '',
                  fields: 'alternativeTitles',
                  fieldsPath: 'mappingDetails.mappingFields[10].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.titleData.field.alternativeTitles.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.titleData.field.alternativeTitles.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[10].value',
                  canAdd: false,
                  canRemove: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['alternativeTitleTypeId', 'alternativeTitle'],
                  columnMapping: {
                    alternativeTitleTypeId: 'ui-data-import.settings.mappingProfiles.map.titleData.alternativeTitles.field.alternativeTitleTypeId',
                    alternativeTitle: 'ui-data-import.settings.mappingProfiles.map.titleData.alternativeTitles.field.alternativeTitle',
                  },
                  mclColumnPaths: {
                    alternativeTitleTypeId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    alternativeTitle: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                  },
                  dataAttributes: { 'data-test-alternative-titles': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.alternativeTitles.field.alternativeTitleTypeId',
                        name: 'mappingDetails.mappingFields[10].subfields[##ri##].fields[0].value',
                        disabled: true,
                        dataAttributes: { 'data-test-alternative-title-type': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      dataAttributes: { 'data-test-alternative-title': '' },
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.alternativeTitles.field.alternativeTitle',
                        name: 'mappingDetails.mappingFields[11].subfields[##ri##].fields[1].value',
                        disabled: true,
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  dataAttributes: { 'data-test-index-title': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.instance.titleData.field.indexTitle',
                    name: 'mappingDetails.mappingFields[11].value',
                    disabled: true, // @TODO: Remove this in favour of data-driven status calculation
                    enabled: false,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-series',
                  name: 'series',
                  label: '',
                  fields: 'series',
                  fieldsPath: 'mappingDetails.mappingFields[12].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.titleData.field.series.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.titleData.field.series.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[12].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['source'],
                  columnMapping: { source: 'ui-data-import.settings.mappingProfiles.map.titleData.series.field.series' },
                  mclColumnPaths: {
                    source: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-series-statements': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.series.field.series',
                        name: 'mappingDetails.mappingFields[12].subfields[##ri##].fields[0].value',
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-preceding-titles',
                  name: 'precedingTitles',
                  label: '',
                  fields: 'precedingTitles',
                  fieldsPath: 'mappingDetails.mappingFields[13].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.titleData.field.precedingTitles.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.titleData.field.precedingTitles.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[13].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['precedingTitlesTitle', 'precedingTitlesHrid', 'precedingTitlesIsbn', 'precedingTitlesIssn'],
                  columnMapping: {
                    precedingTitlesTitle: 'ui-data-import.settings.mappingProfiles.map.titleData.precedingTitles.field.precedingTitlesTitle',
                    precedingTitlesHrid: 'ui-data-import.settings.mappingProfiles.map.titleData.precedingTitles.field.precedingTitlesHrid',
                    precedingTitlesIsbn: 'ui-data-import.settings.mappingProfiles.map.titleData.precedingTitles.field.precedingTitlesIsbn',
                    precedingTitlesIssn: 'ui-data-import.settings.mappingProfiles.map.titleData.precedingTitles.field.precedingTitlesIssn',
                  },
                  mclColumnPaths: {
                    precedingTitlesTitle: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    precedingTitlesHrid: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    precedingTitlesIsbn: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].value',
                    },
                    precedingTitlesIssn: {
                      namePath: 'fields[3].name',
                      valuePath: 'fields[3].value',
                    },
                  },
                  dataAttributes: { 'data-test-preceding-titles': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.precedingTitles.field.precedingTitlesTitle',
                        name: 'mappingDetails.mappingFields[13].subfields[##ri##].fields[0].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.precedingTitles.field.precedingTitlesHrid',
                        name: 'mappingDetails.mappingFields[13].subfields[##ri##].fields[1].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.precedingTitles.field.precedingTitlesIsbn',
                        name: 'mappingDetails.mappingFields[13].subfields[##ri##].fields[2].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.precedingTitles.field.precedingTitlesIssn',
                        name: 'mappingDetails.mappingFields[13].subfields[##ri##].fields[3].value',
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-succeeding-titles',
                  name: 'succeedingTitles',
                  label: '',
                  fields: 'succeedingTitles',
                  fieldsPath: 'mappingDetails.mappingFields[14].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.titleData.field.succeedingTitles.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.titleData.field.succeedingTitles.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[14].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['succeedingTitlesTitle', 'succeedingTitlesHrid', 'succeedingTitlesIsbn', 'succeedingTitlesIssn'],
                  columnMapping: {
                    succeedingTitlesTitle: 'ui-data-import.settings.mappingProfiles.map.titleData.succeedingTitles.field.succeedingTitlesTitle',
                    succeedingTitlesHrid: 'ui-data-import.settings.mappingProfiles.map.titleData.succeedingTitles.field.succeedingTitlesHrid',
                    succeedingTitlesIsbn: 'ui-data-import.settings.mappingProfiles.map.titleData.succeedingTitles.field.succeedingTitlesIsbn',
                    succeedingTitlesIssn: 'ui-data-import.settings.mappingProfiles.map.titleData.succeedingTitles.field.succeedingTitlesIssn',
                  },
                  mclColumnPaths: {
                    succeedingTitlesTitle: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    succeedingTitlesHrid: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    succeedingTitlesIsbn: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].value',
                    },
                    succeedingTitlesIssn: {
                      namePath: 'fields[3].name',
                      valuePath: 'fields[3].value',
                    },
                  },
                  dataAttributes: { 'data-test-succeeding-titles': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.succeedingTitles.field.succeedingTitlesTitle',
                        name: 'mappingDetails.mappingFields[14].subfields[##ri##].fields[0].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.succeedingTitles.field.succeedingTitlesHrid',
                        name: 'mappingDetails.mappingFields[14].subfields[##ri##].fields[1].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.succeedingTitles.field.succeedingTitlesIsbn',
                        name: 'mappingDetails.mappingFields[14].subfields[##ri##].fields[2].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.succeedingTitles.field.succeedingTitlesIssn',
                        name: 'mappingDetails.mappingFields[14].subfields[##ri##].fields[3].value',
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Identifiers accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'identifiers',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.identifiers.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-identifiers',
                  name: 'identifiers',
                  label: '',
                  fields: 'identifiers',
                  fieldsPath: 'mappingDetails.mappingFields[15].subfields',
                  incrementalField: 'order',
                  legend: '',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.titleData.field.identifiers.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[15].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['identifierTypeId', 'value'],
                  columnMapping: {
                    identifierTypeId: 'ui-data-import.settings.mappingProfiles.map.titleData.identifiers.field.identifierTypeId',
                    value: 'ui-data-import.settings.mappingProfiles.map.titleData.identifiers.field.value',
                  },
                  mclColumnPaths: {
                    identifierTypeId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    value: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                  },
                  dataAttributes: { 'data-test-identifiers': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.identifiers.field.identifierTypeId',
                        name: 'mappingDetails.mappingFields[15].subfields[##ri##].fields[0].value',
                        dataAttributes: { 'data-test-identifier-type': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.titleData.identifiers.field.value',
                        name: 'mappingDetails.mappingFields[15].subfields[##ri##].fields[1].value',
                        dataAttributes: { 'data-test-identifier-value': '' },
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Contributors accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'contributors',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-contributors',
                  name: 'contributors',
                  label: '',
                  fields: 'contributors',
                  fieldsPath: 'mappingDetails.mappingFields[16].subfields',
                  incrementalField: 'order',
                  legend: '',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[16].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['contributorName', 'contributorNameTypeId', 'contributorTypeId', 'contributorTypeText', 'primary'],
                  columnMapping: {
                    contributorName: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.contributorName',
                    contributorNameTypeId: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.contributorNameTypeId',
                    contributorTypeId: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.contributorTypeId',
                    contributorTypeText: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.contributorTypeText',
                    primary: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.primary',
                  },
                  mclColumnPaths: {
                    contributorName: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    contributorNameTypeId: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    contributorTypeId: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].value',
                    },
                    contributorTypeText: {
                      namePath: 'fields[3].name',
                      valuePath: 'fields[3].value',
                    },
                    primary: {
                      namePath: 'fields[4].name',
                      valuePath: 'fields[4].booleanFieldAction',
                    },
                  },
                  dataAttributes: { 'data-test-contributors': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.contributorName',
                        name: 'mappingDetails.mappingFields[16].subfields[##ri##].fields[0].value',
                        dataAttributes: { 'data-test-name': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.contributorNameTypeId',
                        name: 'mappingDetails.mappingFields[16].subfields[##ri##].fields[1].value',
                        dataAttributes: { 'data-test-name-type': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.contributorTypeId',
                        name: 'mappingDetails.mappingFields[16].subfields[##ri##].fields[2].value',
                        dataAttributes: { 'data-test-type': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.contributorTypeText',
                        name: 'mappingDetails.mappingFields[16].subfields[##ri##].fields[3].value',
                        dataAttributes: { 'data-test-type-free-text': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      dataAttributes: { 'data-test-primary': '' },
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'Checkbox',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.contributors.field.primary',
                        name: 'mappingDetails.mappingFields[16].subfields[##ri##].fields[4].booleanFieldAction',
                        decorator: 'withBooleanActions',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Descriptive data accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'descriptive-data',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-publications',
                  name: 'publication',
                  label: '',
                  fields: 'publication',
                  fieldsPath: 'mappingDetails.mappingFields[17].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publications.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publications.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[17].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['publisher', 'role', 'place', 'dateOfPublication'],
                  columnMapping: {
                    publisher: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publisher',
                    role: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.role',
                    place: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.place',
                    dateOfPublication: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.dateOfPublication',
                  },
                  mclColumnPaths: {
                    publisher: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    role: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    place: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].value',
                    },
                    dateOfPublication: {
                      namePath: 'fields[3].name',
                      valuePath: 'fields[3].value',
                    },
                  },
                  dataAttributes: { 'data-test-publications': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publisher',
                        name: 'mappingDetails.mappingFields[17].subfields[##ri##].fields[0].value',
                        dataAttributes: { 'data-test-publisher': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.role',
                        name: 'mappingDetails.mappingFields[17].subfields[##ri##].fields[1].value',
                        dataAttributes: { 'data-test-publisher-role': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.place',
                        name: 'mappingDetails.mappingFields[17].subfields[##ri##].fields[2].value',
                        dataAttributes: { 'data-test-place': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 3,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.dateOfPublication',
                        name: 'mappingDetails.mappingFields[17].subfields[##ri##].fields[3].value',
                        dataAttributes: { 'data-test-publication-date': '' },
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-editions',
                  name: 'editions',
                  label: '',
                  fields: 'editions',
                  fieldsPath: 'mappingDetails.mappingFields[18].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.editions.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.editions.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[18].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['edition'],
                  columnMapping: { edition: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.edition' },
                  mclColumnPaths: {
                    edition: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-editions': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.edition',
                        name: 'mappingDetails.mappingFields[18].subfields[##ri##].fields[0].value',
                        dataAttributes: { 'data-test-edition': '' },
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-physical-descriptions',
                  name: 'physicalDescriptions',
                  label: '',
                  fields: 'physicalDescriptions',
                  fieldsPath: 'mappingDetails.mappingFields[19].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.physicalDescriptions.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.physicalDescriptions.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[19].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['physicalDescription'],
                  columnMapping: { physicalDescription: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.physicalDescription' },
                  mclColumnPaths: {
                    physicalDescription: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-physical-descriptions': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.physicalDescription',
                        name: 'mappingDetails.mappingFields[19].subfields[##ri##].fields[0].value',
                        dataAttributes: { 'data-test-physical-description': '' },
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  dataAttributes: { 'data-test-resource-type': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.instanceTypeId',
                    name: 'mappingDetails.mappingFields[20].value',
                    disabled: true,
                    enabled: false,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-nature-of-content',
                  name: 'natureOfContentTermIds',
                  fields: 'natureOfContentTermIds',
                  fieldsPath: 'mappingDetails.mappingFields[21].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.natureOfContentTermsIds.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.natureOfContentTermsIds.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[21].value',
                  canAdd: true,
                  canDelete: true,
                  renderStaticAsMCL: true,
                  visibleColumns: ['natureOfContentTermId'],
                  columnMapping: { natureOfContentTermId: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.natureOfContentTermId' },
                  mclColumnPaths: {
                    natureOfContentTermId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-nature-of-content-terms': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      dataAttributes: { 'data-test-nature-of-content-term': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.natureOfContentTermId',
                        name: 'mappingDetails.mappingFields[21].subfields[##ri##].fields[0].value',
                        fieldsPath: 'mappingDetails.mappingFields[21].subfields[##ri##].fields[0].acceptedValues',
                        fields: 'natureOfContentTermIds',
                        optionValue: 'name',
                        optionLabel: 'name',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/nature-of-content-terms?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'natureOfContentTerms',
                        }],
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-instance-formats',
                  name: 'instanceFormatIds',
                  fields: 'instanceFormatIds',
                  fieldsPath: 'mappingDetails.mappingFields[22].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.instanceFormatIds.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.instanceFormatIds.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[22].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['instanceFormatId'],
                  columnMapping: { instanceFormatId: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.instanceFormatId' },
                  mclColumnPaths: {
                    instanceFormatId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-formats': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.instanceFormatId',
                        name: 'mappingDetails.mappingFields[22].subfields[##ri##].fields[0].value',
                        disabled: true,
                        dataAttributes: { 'data-test-format': '' },
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-languages',
                  name: 'languages',
                  fields: 'languages',
                  fieldsPath: 'mappingDetails.mappingFields[23].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.languages.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.languages.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[23].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['languageId'],
                  columnMapping: { languageId: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.languageId' },
                  mclColumnPaths: {
                    languageId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-languages': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.languageId',
                        name: 'mappingDetails.mappingFields[23].subfields[##ri##].fields[0].value',
                        disabled: true,
                        dataAttributes: { 'data-test-language': '' },
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-publication-frequency',
                  name: 'publicationFrequency',
                  fields: 'publicationFrequency',
                  fieldsPath: 'mappingDetails.mappingFields[24].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publicationFrequency.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publicationFrequency.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[24].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['publicationFrequency'],
                  columnMapping: { publicationFrequency: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publicationFrequency' },
                  mclColumnPaths: {
                    publicationFrequency: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-publication-frequencies': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publicationFrequency',
                        name: 'mappingDetails.mappingFields[24].subfields[##ri##].fields[0].value',
                        disabled: true,
                        dataAttributes: { 'data-test-publication-frequency': '' },
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-publication-range',
                  name: 'publicationRange',
                  fields: 'publicationRange',
                  fieldsPath: 'mappingDetails.mappingFields[25].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publicationRange.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publicationRange.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[25].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['publicationRange'],
                  columnMapping: { publicationRange: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publicationRange' },
                  mclColumnPaths: {
                    publicationRange: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-publication-ranges': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.publicationRange',
                        name: 'mappingDetails.mappingFields[25].subfields[##ri##].fields[0].value',
                        disabled: true,
                        dataAttributes: { 'data-test-publication-range': '' },
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Instance notes accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'instance-notes',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.instance.instanceNotes.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-instance-notes',
                  name: 'notes',
                  label: '',
                  fields: 'notes',
                  fieldsPath: 'mappingDetails.mappingFields[26].subfields',
                  incrementalField: 'order',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.field.notes.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[26].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['noteType', 'note', 'staffOnly'],
                  columnMapping: {
                    noteType: 'ui-data-import.settings.mappingProfiles.map.field.notes.noteType',
                    note: 'ui-data-import.settings.mappingProfiles.map.field.notes.note',
                    staffOnly: 'ui-data-import.settings.mappingProfiles.map.field.notes.staffOnly',
                  },
                  mclColumnPaths: {
                    noteType: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    note: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    staffOnly: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].booleanFieldAction',
                    },
                  },
                  dataAttributes: { 'data-test-notes': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.noteType',
                        name: 'mappingDetails.mappingFields[26].subfields[##ri##].fields[0].value',
                        disabled: true,
                        dataAttributes: { 'data-test-note-type': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.note',
                        name: 'mappingDetails.mappingFields[26].subfields[##ri##].fields[1].value',
                        disabled: true,
                        dataAttributes: { 'data-test-note': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      dataAttributes: { 'data-test-staff-only': '' },
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'Checkbox',
                        label: 'ui-data-import.settings.mappingProfiles.map.field.notes.staffOnly',
                        name: 'mappingDetails.mappingFields[26].subfields[##ri##].fields[2].booleanFieldAction',
                        decorator: 'withBooleanActions',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                        disabled: true,
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Instance electronic access accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'instance-electronic-access',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.EAccess.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-electronic-access',
                  name: 'electronicAccess',
                  fields: 'electronicAccess',
                  fieldsPath: 'mappingDetails.mappingFields[27].subfields',
                  incrementalField: 'order',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.field.EAccess.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[27].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['relationshipId', 'uri', 'linkText', 'materialsSpecification', 'publicNote'],
                  columnMapping: {
                    relationshipId: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.relationship',
                    uri: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.uri',
                    linkText: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.linkText',
                    materialsSpecification: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.materialsSpecified',
                    publicNote: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.urlPublicNote',
                  },
                  mclColumnPaths: {
                    relationshipId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    uri: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                    linkText: {
                      namePath: 'fields[2].name',
                      valuePath: 'fields[2].value',
                    },
                    materialsSpecification: {
                      namePath: 'fields[3].name',
                      valuePath: 'fields[3].value',
                    },
                    publicNote: {
                      namePath: 'fields[4].name',
                      valuePath: 'fields[4].value',
                    },
                  },
                  dataAttributes: { 'data-test-electronic-access': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      dataAttributes: { 'data-test-relationship': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.relationship',
                        name: 'mappingDetails.mappingFields[27].subfields[##ri##].fields[0].value',
                        fieldsPath: 'mappingDetails.mappingFields[27].subfields[##ri##].fields[0].acceptedValues',
                        fields: 'electronicAccess',
                        disabled: true,
                        optionValue: 'name',
                        optionLabel: 'name',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/electronic-access-relationships?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'electronicAccessRelationships',
                        }],
                        dataAttributes: { 'data-test-relationship': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.uri',
                        name: 'mappingDetails.mappingFields[27].subfields[##ri##].fields[1].value',
                        disabled: true,
                        dataAttributes: { 'data-test-uri': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.linkText',
                        name: 'mappingDetails.mappingFields[27].subfields[##ri##].fields[2].value',
                        disabled: true,
                        dataAttributes: { 'data-test-link-text': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.materialsSpecified',
                        name: 'mappingDetails.mappingFields[27].subfields[##ri##].fields[3].value',
                        disabled: true,
                        dataAttributes: { 'data-test-materials-specified': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 2,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.urlPublicNote',
                        name: 'mappingDetails.mappingFields[27].subfields[##ri##].fields[4].value',
                        disabled: true,
                        dataAttributes: { 'data-test-url-public-note': '' },
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Subjects accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'subjects',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.instance.subject.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-subjects',
                  name: 'subjects',
                  fields: 'subjects',
                  fieldsPath: 'mappingDetails.mappingFields[28].subfields',
                  incrementalField: 'order',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.subjects.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[28].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['subject'],
                  columnMapping: { subject: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.subjects' },
                  mclColumnPaths: {
                    subject: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-subjects': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.subjects',
                        name: 'mappingDetails.mappingFields[28].subfields[##ri##].fields[0].value',
                        disabled: true,
                        dataAttributes: { 'data-test-subjects-field': '' },
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Classification accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'classification',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.instance.classifications.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-classification',
                  name: 'classifications',
                  fields: 'classifications',
                  fieldsPath: 'mappingDetails.mappingFields[29].classifications',
                  incrementalField: 'order',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.classifications.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: false,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[29].value',
                  canAdd: false,
                  canDelete: false,
                  renderStaticAsMCL: true,
                  visibleColumns: ['classificationTypeId', 'classificationNumber'],
                  columnMapping: {
                    classificationTypeId: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.classificationTypeId',
                    classificationNumber: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.classificationNumber',
                  },
                  mclColumnPaths: {
                    classificationTypeId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    classificationNumber: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                  },
                  dataAttributes: { 'data-test-classifications': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.classificationTypeId',
                        name: 'mappingDetails.mappingFields[29].subfields[##ri##].fields[0].value',
                        disabled: true,
                        dataAttributes: { 'data-test-classification-identifier-type': '' },
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.descriptiveData.field.classificationNumber',
                        name: 'mappingDetails.mappingFields[29].subfields[##ri##].fields[1].value',
                        disabled: true,
                        dataAttributes: { 'data-test-classification': '' },
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Instance relationship accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'instance-relationship',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.instance.relationship.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-parent-instances',
                  name: 'parentInstances',
                  fields: 'parentInstances',
                  fieldsPath: 'mappingDetails.mappingFields[30].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.field.parentInstances.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.field.parentInstances.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[30].value',
                  canAdd: true,
                  canDelete: true,
                  renderStaticAsMCL: true,
                  visibleColumns: ['superInstanceId', 'instanceRelationshipTypeId'],
                  columnMapping: {
                    superInstanceId: 'ui-data-import.settings.mappingProfiles.map.instance.parentInstances.field.superInstanceId',
                    instanceRelationshipTypeId: 'ui-data-import.settings.mappingProfiles.map.instance.parentInstances.field.instnaceRelationshipTypeId',
                  },
                  mclColumnPaths: {
                    superInstanceId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    instanceRelationshipTypeId: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                  },
                  dataAttributes: { 'data-test-parent-instances': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.parentInstances.field.superInstanceId',
                        name: 'mappingDetails.mappingFields[30].subfields[##ri##].fields[0].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      dataAttributes: { 'data-test-parent-type-of-relation': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.parentInstances.field.instnaceRelationshipTypeId',
                        name: 'mappingDetails.mappingFields[30].subfields[##ri##].fields[1].value',
                        fieldsPath: 'mappingDetails.mappingFields[30].subfields[##ri##].fields[1].acceptedValues',
                        fields: 'parentInstances',
                        optionValue: 'name',
                        optionLabel: 'name',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/instance-relationship-types?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'instanceRelationshipTypes',
                        }],
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-child-instances',
                  name: 'childInstances',
                  fields: 'childInstances',
                  fieldsPath: 'mappingDetails.mappingFields[31].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.instance.field.childInstances.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.instance.field.childInstances.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[31].value',
                  canAdd: true,
                  canDelete: true,
                  renderStaticAsMCL: true,
                  visibleColumns: ['subInstanceId', 'instanceRelationshipTypeId'],
                  columnMapping: {
                    subInstanceId: 'ui-data-import.settings.mappingProfiles.map.instance.childInstances.field.subInstanceId',
                    instanceRelationshipTypeId: 'ui-data-import.settings.mappingProfiles.map.instance.childInstances.field.instnaceRelationshipTypeId',
                  },
                  mclColumnPaths: {
                    subInstanceId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    instanceRelationshipTypeId: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                  },
                  dataAttributes: { 'data-test-child-instances': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.childInstances.field.subInstanceId',
                        name: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[0].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 6,
                      dataAttributes: { 'data-test-child-type-of-relation': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.instance.childInstances.field.instnaceRelationshipTypeId',
                        name: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[1].value',
                        fieldsPath: 'mappingDetails.mappingFields[31].subfields[##ri##].fields[1].acceptedValues',
                        fields: 'childInstances',
                        optionValue: 'name',
                        optionLabel: 'name',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/instance-relationship-types?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'instanceRelationshipTypes',
                        }],
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Related instances accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'related-instances',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.item.relatedInstances.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  childControls: [{
                    controlType: 'Fragment',
                    staticControlType: 'Fragment',
                  }],
                }],
              }],
            }],
          }],
        }],
      }],
    }, { // mapping details Holdings section
      controlType: 'Row',
      staticControlType: 'Row',
      between: 'xs',
      id: 'mapping-details-holdings',
      sectionKey: 'mappingDetailsHoldings',
      name: 'mappingDetailsHoldings',
      classNames: [],
      dataAttributes: {},
      childControls: [{
        controlType: 'Col',
        staticControlType: 'Col',
        xs: 12,
        childControls: [{
          controlType: 'AccordionStatus',
          staticControlType: 'AccordionStatus',
          childControls: [{
            controlType: 'Row',
            staticControlType: 'Row',
            between: 'xs',
            childControls: [{
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'MappedHeader',
                staticControlType: 'MappedHeader',
                mappedLabelId: 'ui-data-import.settings.profiles.select.mappingProfiles',
                mappedLabel: 'Field mapping',
                mappableLabelId: 'ui-data-import.settings.mappingProfiles.map.holdings',
                mappableLabel: 'Holdings',
                headlineProps: { margin: 'small' },
              }],
            }, {
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'div',
                staticControlType: 'div',
                dataAttributes: { 'data-test-expand-all-button': '' },
                childControls: [{
                  controlType: 'div',
                  staticControlType: 'div',
                  dataAttributes: { 'data-test-expand-all-button': '' },
                  childControls: [{
                    controlType: 'ExpandAllButton',
                    staticControlType: 'ExpandAllButton',
                  }],
                }],
              }],
            }],
          }, {
            controlType: 'AccordionSet',
            staticControlType: 'AccordionSet',
            dataAttributes: {},
            childControls: [{ // Administrative data accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'administrative-data',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-suppress-from-discovery': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'Checkbox',
                    label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.discoverySuppress',
                    name: 'mappingDetails.mappingFields[0].booleanFieldAction',
                    decorator: 'withBooleanActions',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 3,
                  dataAttributes: { 'data-test-holdings-hrid': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.holdings.administrativeData.field.hrid',
                    name: 'mappingDetails.mappingFields[1].value',
                    disabled: true, // @TODO: Possible change this for some programmatic status check
                    enabled: false,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-former-ids',
                  name: 'formerIds',
                  label: '',
                  fields: 'formerIds',
                  fieldsPath: 'mappingDetails.mappingFields[2].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.holdings.administrativeData.field.formerId.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.holdings.administrativeData.field.formerId.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[2].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['formerId'],
                  columnMapping: { formerId: 'ui-data-import.settings.mappingProfiles.map.holdings.administrativeData.field.formerId' },
                  mclColumnPaths: {
                    formerId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-former-holdings': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.holdings.administrativeData.field.formerId',
                        name: 'mappingDetails.mappingFields[2].subfields[##ri##].fields[0].value',
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-holdings-type': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.holdings.administrativeData.field.holdingsTypeId',
                    name: 'mappingDetails.mappingFields[3].value',
                    fieldsPath: 'mappingDetails.mappingFields[3].acceptedValues',
                    fields: 'holdingsTypeId',
                    enabled: true,
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/holdings-types?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'holdingsTypes',
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-statistical-code-ids',
                  name: 'statisticalCodeIds',
                  label: '',
                  fields: 'statisticalCodeIds',
                  fieldsPath: 'mappingDetails.mappingFields[4].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCodes.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCodes.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[4].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['statisticalCodeId'],
                  columnMapping: { statisticalCodeId: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCode' },
                  mclColumnPaths: {
                    statisticalCodeId: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                  },
                  dataAttributes: { 'data-test-statistical-codes': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 12,
                      dataAttributes: { 'data-test-statistical-code': '' },
                      childControls: [{
                        controlType: 'AcceptedValuesField',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.statisticalCode',
                        name: 'mappingDetails.mappingFields[4].subfields[##ri##].fields[0].value',
                        fieldsPath: 'mappingDetails.mappingFields[4].subfields[##ri##].fields[0].acceptedValues',
                        fields: 'statisticalCodeIds',
                        optionValue: 'name',
                        optionLabel: 'name',
                        optionTemplate: '**statisticalCodeTypeName**: **code** - **name**',
                        wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                        wrapperSources: [{
                          wrapperSourceLink: '/statistical-codes?limit=2000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'statisticalCodes',
                        }, {
                          wrapperSourceLink: '/statistical-code-types?limit=1000&query=cql.allRecords=1 sortby name',
                          wrapperSourcePath: 'statisticalCodeTypes',
                        }],
                        wrapperSourcesFn: 'statisticalCodeTypeName',
                      }],
                    }],
                  }],
                }],
              }],
            }, { // Holdings location accordion
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'holdings-location',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.location.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-permanent': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.location.field.permanent',
                    name: 'mappingDetails.mappingFields[5].value',
                    fieldsPath: 'mappingDetails.mappingFields[5].acceptedValues',
                    fields: 'permanentLocationId',
                    enabled: true,
                    optionValue: 'name',
                    optionLabel: 'name',
                    optionTemplate: '**name** (**code**)',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/locations?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'locations',
                    }],
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-temporary': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.location.field.temporary',
                    name: 'mappingDetails.mappingFields[6].value',
                    fieldsPath: 'mappingDetails.mappingFields[6].acceptedValues',
                    fields: 'temporaryLocationId',
                    enabled: true,
                    optionValue: 'name',
                    optionLabel: 'name',
                    optionTemplate: '**name** (**code**)',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/locations?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'locations',
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-shelving-order': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.holdings.location.field.shelvingOrder',
                    name: 'mappingDetails.mappingFields[7].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-shelving-title': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.holdings.location.field.shelvingTitle',
                    name: 'mappingDetails.mappingFields[8].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-copy-number': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.copyNumber',
                    name: 'mappingDetails.mappingFields[9].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 6,
                  dataAttributes: { 'data-test-call-number-type': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.callNumberType',
                    name: 'mappingDetails.mappingFields[10].value',
                    fieldsPath: 'mappingDetails.mappingFields[10].acceptedValues',
                    fields: 'callNumberTypeId',
                    enabled: true,
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/call-number-types?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'callNumberTypes',
                    }],
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 2,
                  dataAttributes: { 'data-test-call-number-prefix': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.callNumberPrefix',
                    name: 'mappingDetails.mappingFields[11].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 2,
                  dataAttributes: { 'data-test-call-number': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.callNumber',
                    name: 'mappingDetails.mappingFields[12].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 2,
                  dataAttributes: { 'data-test-call-number-suffix': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.field.callNumberSuffix',
                    name: 'mappingDetails.mappingFields[13].value',
                    enabled: true,
                  }],
                }],
              }],
            }, {
              controlType: 'Accordion',
              staticControlType: 'Accordion',
              id: 'holdings-details',
              collapsed: false,
              separator: true,
              label: 'ui-data-import.settings.mappingProfiles.map.holdings.details.section',
              dataAttributes: {},
              childControls: [{
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-number-of-items': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.holdings.details.field.numberOfItems',
                    name: 'mappingDetails.mappingFields[14].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-holding-statements',
                  name: 'holdingStatements',
                  fields: 'holdingStatements',
                  fieldsPath: 'mappingDetails.mappingFields[15].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatement.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatement.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[15].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['statement', 'note'],
                  columnMapping: {
                    statement: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatement',
                    note: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatementNote',
                  },
                  mclColumnPaths: {
                    statement: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    note: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                  },
                  dataAttributes: { 'data-test-statements': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatement',
                        name: 'mappingDetails.mappingFields[15].subfields[##ri##].fields[0].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatementNote',
                        name: 'mappingDetails.mappingFields[15].subfields[##ri##].fields[1].value',
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-holding-statements-for-supplements',
                  name: 'holdingStatementsForSupplements',
                  fields: 'holdingStatementsForSupplements',
                  fieldsPath: 'mappingDetails.mappingFields[16].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.statements.field.holdingsStatementsForSupplements.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.statements.field.holdingsStatementsForSupplements.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[16].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['statement', 'note'],
                  columnMapping: {
                    statement: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatement',
                    note: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatementNote',
                  },
                  mclColumnPaths: {
                    statement: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    note: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                  },
                  dataAttributes: { 'data-test-statements-for-supplement': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatement',
                        name: 'mappingDetails.mappingFields[16].subfields[##ri##].fields[0].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatementNote',
                        name: 'mappingDetails.mappingFields[16].subfields[##ri##].fields[1].value',
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 12,
                  id: 'section-holding-statements-for-indexes',
                  name: 'holdingStatementsForIndexes',
                  fields: 'holdingStatementsForIndexes',
                  fieldsPath: 'mappingDetails.mappingFields[17].subfields',
                  incrementalField: 'order',
                  legend: 'ui-data-import.settings.mappingProfiles.map.statements.field.holdingsStatementsForIndexes.legend',
                  addLabel: 'ui-data-import.settings.mappingProfiles.map.statements.field.holdingsStatementsForIndexes.addLabel',
                  emptyMessage: 'EMPTY FIELDS HERE',
                  enabled: true,
                  repeatable: true,
                  decorator: 'withRepeatableActions',
                  wrapperFieldName: 'mappingDetails.mappingFields[17].value',
                  renderStaticAsMCL: true,
                  visibleColumns: ['statement', 'note'],
                  columnMapping: {
                    statement: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatement',
                    note: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatementNote',
                  },
                  mclColumnPaths: {
                    statement: {
                      namePath: 'fields[0].name',
                      valuePath: 'fields[0].value',
                    },
                    note: {
                      namePath: 'fields[1].name',
                      valuePath: 'fields[1].value',
                    },
                  },
                  dataAttributes: { 'data-test-statements-for-indexes': '' },
                  childControls: [{
                    controlType: 'Row',
                    staticControlType: 'Row',
                    left: 'xs',
                    childControls: [{
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatement',
                        name: 'mappingDetails.mappingFields[17].subfields[##ri##].fields[0].value',
                      }],
                    }, {
                      controlType: 'Col',
                      staticControlType: 'Col',
                      xs: 4,
                      childControls: [{
                        controlType: 'Field',
                        staticControlType: 'KeyValue',
                        component: 'TextField',
                        label: 'ui-data-import.settings.mappingProfiles.map.holdings.statements.field.holdingsStatementNote',
                        name: 'mappingDetails.mappingFields[17].subfields[##ri##].fields[1].value',
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Row',
                staticControlType: 'Row',
                left: 'xs',
                childControls: [{
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-ill-policy': '' },
                  childControls: [{
                    controlType: 'AcceptedValuesField',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.holdings.field.illPolicy',
                    name: 'mappingDetails.mappingFields[18].value',
                    fieldsPath: 'mappingDetails.mappingFields[18].acceptedValues',
                    fields: 'illPolicyId',
                    enabled: true,
                    optionValue: 'name',
                    optionLabel: 'name',
                    wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                    wrapperSources: [{
                      wrapperSourceLink: '/ill-policies?limit=1000&query=cql.allRecords=1 sortby name',
                      wrapperSourcePath: 'illPolicies',
                    }],
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-digitization-policy': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.holdings.field.digitizationPolicy',
                    name: 'mappingDetails.mappingFields[19].value',
                    enabled: true,
                  }],
                }, {
                  controlType: 'Col',
                  staticControlType: 'Col',
                  xs: 4,
                  dataAttributes: { 'data-test-retention-policy': '' },
                  childControls: [{
                    controlType: 'Field',
                    staticControlType: 'KeyValue',
                    component: 'TextField',
                    label: 'ui-data-import.settings.mappingProfiles.map.holdings.field.retentionPolicy',
                    name: 'mappingDetails.mappingFields[20].value',
                    enabled: true,
                  }],
                }],
              }, {
                controlType: 'Accordion',
                staticControlType: 'Accordion',
                id: 'holdings-notes',
                collapsed: false,
                separator: true,
                label: 'ui-data-import.settings.mappingProfiles.map.holdings.holdingsNotes.section',
                dataAttributes: {},
                childControls: [{
                  controlType: 'Row',
                  staticControlType: 'Row',
                  left: 'xs',
                  childControls: [{
                    controlType: 'Col',
                    staticControlType: 'Col',
                    xs: 12,
                    id: 'section-holdings-notes',
                    name: 'notes',
                    addLabel: 'ui-data-import.settings.mappingProfiles.map.field.holdingsNotes.addLabel',
                    fields: 'notes',
                    fieldsPath: 'mappingDetails.mappingFields[21].subfields',
                    incrementalField: 'order',
                    emptyMessage: 'EMPTY FIELDS HERE',
                    enabled: true,
                    repeatable: true,
                    decorator: 'withRepeatableActions',
                    wrapperFieldName: 'mappingDetails.mappingFields[21].value',
                    renderStaticAsMCL: true,
                    visibleColumns: ['noteType', 'note', 'staffOnly'],
                    columnMapping: {
                      noteType: 'ui-data-import.settings.mappingProfiles.map.field.notes.noteType',
                      note: 'ui-data-import.settings.mappingProfiles.map.field.notes.note',
                      staffOnly: 'ui-data-import.settings.mappingProfiles.map.field.notes.staffOnly',
                    },
                    mclColumnPaths: {
                      noteType: {
                        namePath: 'fields[0].name',
                        valuePath: 'fields[0].value',
                      },
                      note: {
                        namePath: 'fields[1].name',
                        valuePath: 'fields[1].value',
                      },
                      staffOnly: {
                        namePath: 'fields[2].name',
                        valuePath: 'fields[2].booleanFieldAction',
                      },
                    },
                    dataAttributes: { 'data-test-notes': '' },
                    childControls: [{
                      controlType: 'Row',
                      staticControlType: 'Row',
                      left: 'xs',
                      childControls: [{
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 4,
                        dataAttributes: { 'data-test-note': '' },
                        childControls: [{
                          controlType: 'AcceptedValuesField',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.field.notes.noteType',
                          name: 'mappingDetails.mappingFields[21].subfields[##ri##].fields[0].value',
                          fieldsPath: 'mappingDetails.mappingFields[21].subfields[##ri##].fields[0].acceptedValues',
                          fields: 'notes',
                          optionValue: 'name',
                          optionLabel: 'name',
                          wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                          wrapperSources: [{
                            wrapperSourceLink: '/holdings-note-types?limit=1000&query=cql.allRecords=1 sortby name',
                            wrapperSourcePath: 'holdingsNoteTypes',
                          }],
                        }],
                      }, {
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 4,
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.field.notes.note',
                          name: 'mappingDetails.mappingFields[21].subfields[##ri##].fields[1].value',
                        }],
                      }, {
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 4,
                        dataAttributes: { 'data-test-staff-only': '' },
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'Checkbox',
                          label: 'ui-data-import.settings.mappingProfiles.map.field.notes.staffOnly',
                          name: 'mappingDetails.mappingFields[21].subfields[##ri##].fields[2].booleanFieldAction',
                          decorator: 'withBooleanActions',
                          wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                        }],
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Accordion',
                staticControlType: 'Accordion',
                id: 'holdings-electronic-access',
                collapsed: false,
                separator: true,
                label: 'ui-data-import.settings.mappingProfiles.map.EAccess.section',
                dataAttributes: {},
                childControls: [{
                  controlType: 'Row',
                  staticControlType: 'Row',
                  left: 'xs',
                  childControls: [{
                    controlType: 'Col',
                    staticControlType: 'Col',
                    xs: 12,
                    id: 'section-electronic-access',
                    name: 'electronicAccess',
                    addLabel: 'ui-data-import.settings.mappingProfiles.map.field.EAccess.addLabel',
                    fields: 'electronicAccess',
                    fieldsPath: 'mappingDetails.mappingFields[22].subfields',
                    incrementalField: 'order',
                    emptyMessage: 'EMPTY FIELDS HERE',
                    enabled: true,
                    repeatable: true,
                    decorator: 'withRepeatableActions',
                    wrapperFieldName: 'mappingDetails.mappingFields[22].value',
                    renderStaticAsMCL: true,
                    visibleColumns: ['relationshipId', 'uri', 'linkText', 'materialsSpecification', 'publicNote'],
                    columnMapping: {
                      relationshipId: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.relationship',
                      uri: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.uri',
                      linkText: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.linkText',
                      materialsSpecification: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.materialsSpecified',
                      publicNote: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.urlPublicNote',
                    },
                    mclColumnPaths: {
                      relationshipId: {
                        namePath: 'fields[0].name',
                        valuePath: 'fields[0].value',
                      },
                      uri: {
                        namePath: 'fields[1].name',
                        valuePath: 'fields[1].value',
                      },
                      linkText: {
                        namePath: 'fields[2].name',
                        valuePath: 'fields[2].value',
                      },
                      materialsSpecification: {
                        namePath: 'fields[3].name',
                        valuePath: 'fields[3].value',
                      },
                      publicNote: {
                        namePath: 'fields[4].name',
                        valuePath: 'fields[4].value',
                      },
                    },
                    dataAttributes: { 'data-test-electronic-access': '' },
                    childControls: [{
                      controlType: 'Row',
                      staticControlType: 'Row',
                      left: 'xs',
                      childControls: [{
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 4,
                        dataAttributes: { 'data-test-electronic-relationship': '' },
                        childControls: [{
                          controlType: 'AcceptedValuesField',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.relationship',
                          name: 'mappingDetails.mappingFields[22].subfields[##ri##].fields[0].value',
                          fieldsPath: 'mappingDetails.mappingFields[22].subfields[##ri##].fields[0].acceptedValues',
                          fields: 'electronicAccess',
                          optionValue: 'name',
                          optionLabel: 'name',
                          wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.wrapper.acceptedValues',
                          wrapperSources: [{
                            wrapperSourceLink: '/electronic-access-relationships?limit=1000&query=cql.allRecords=1 sortby name',
                            wrapperSourcePath: 'electronicAccessRelationships',
                          }],
                        }],
                      }, {
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 2,
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.uri',
                          name: 'mappingDetails.mappingFields[22].subfields[##ri##].fields[1].value',
                        }],
                      }, {
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 2,
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.linkText',
                          name: 'mappingDetails.mappingFields[22].subfields[##ri##].fields[2].value',
                        }],
                      }, {
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 2,
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.materialsSpecified',
                          name: 'mappingDetails.mappingFields[22].subfields[##ri##].fields[3].value',
                        }],
                      }, {
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 2,
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.EAccess.field.urlPublicNote',
                          name: 'mappingDetails.mappingFields[22].subfields[##ri##].fields[4].value',
                        }],
                      }],
                    }],
                  }],
                }],
              }, {
                controlType: 'Accordion',
                staticControlType: 'Accordion',
                id: 'holdings-acquisition',
                collapsed: false,
                separator: true,
                label: 'ui-data-import.settings.mappingProfiles.map.acquisition.section',
                dataAttributes: {},
                childControls: [{
                  controlType: 'Row',
                  staticControlType: 'Row',
                  left: 'xs',
                  childControls: [{
                    controlType: 'Col',
                    staticControlType: 'Col',
                    xs: 4,
                    dataAttributes: { 'data-test-acquisition-method': '' },
                    childControls: [{
                      controlType: 'Field',
                      staticControlType: 'KeyValue',
                      component: 'TextField',
                      label: 'ui-data-import.settings.mappingProfiles.map.field.acquisitionMethod',
                      name: 'mappingDetails.mappingFields[23].value',
                      enabled: true,
                    }],
                  }, {
                    controlType: 'Col',
                    staticControlType: 'Col',
                    xs: 4,
                    dataAttributes: { 'data-test-order-format': '' },
                    childControls: [{
                      controlType: 'Field',
                      staticControlType: 'KeyValue',
                      component: 'TextField',
                      label: 'ui-data-import.settings.mappingProfiles.map.field.orderFormat',
                      name: 'mappingDetails.mappingFields[24].value',
                      enabled: true,
                    }],
                  }, {
                    controlType: 'Col',
                    staticControlType: 'Col',
                    xs: 4,
                    dataAttributes: { 'data-test-receipt-status': '' },
                    childControls: [{
                      controlType: 'Field',
                      staticControlType: 'KeyValue',
                      component: 'TextField',
                      label: 'ui-data-import.settings.mappingProfiles.map.field.receiptStatus',
                      name: 'mappingDetails.mappingFields[25].value',
                      enabled: true,
                    }],
                  }],
                }],
              }, {
                controlType: 'Accordion',
                staticControlType: 'Accordion',
                id: 'holdings-receiving-history',
                collapsed: false,
                separator: true,
                label: 'ui-data-import.settings.mappingProfiles.map.receivingHistory.section',
                dataAttributes: {},
                childControls: [{
                  controlType: 'Row',
                  staticControlType: 'Row',
                  left: 'xs',
                  childControls: [{
                    controlType: 'Col',
                    staticControlType: 'Col',
                    xs: 12,
                    id: 'section-receiving-history',
                    name: 'receivingHistory.entries',
                    addLabel: 'ui-data-import.settings.mappingProfiles.map.field.receivingHistory.addLabel',
                    fields: 'receivingHistory.entries',
                    fieldsPath: 'mappingDetails.mappingFields[26].subfields',
                    incrementalField: 'order',
                    emptyMessage: 'EMPTY FIELDS HERE',
                    enabled: true,
                    repeatable: true,
                    decorator: 'withRepeatableActions',
                    wrapperFieldName: 'mappingDetails.mappingFields[26].value',
                    renderStaticAsMCL: true,
                    visibleColumns: ['publicDisplay', 'enumeration', 'chronology'],
                    columnMapping: {
                      publicDisplay: 'ui-data-import.settings.mappingProfiles.map.field.publicDisplay',
                      enumeration: 'ui-data-import.settings.mappingProfiles.map.field.enumeration',
                      chronology: 'ui-data-import.settings.mappingProfiles.map.field.chronology',
                    },
                    mclColumnPaths: {
                      publicDisplay: {
                        namePath: 'fields[0].name',
                        valuePath: 'fields[0].booleanFieldAction',
                      },
                      enumeration: {
                        namePath: 'fields[1].name',
                        valuePath: 'fields[1].value',
                      },
                      chronology: {
                        namePath: 'fields[2].name',
                        valuePath: 'fields[2].value',
                      },
                    },
                    dataAttributes: { 'data-test-receiving-history-note': '' },
                    childControls: [{
                      controlType: 'Row',
                      staticControlType: 'Row',
                      left: 'xs',
                      childControls: [{
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 4,
                        dataAttributes: { 'data-test-public-display': '' },
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'Checkbox',
                          label: 'ui-data-import.settings.mappingProfiles.map.field.publicDisplay',
                          name: 'mappingDetails.mappingFields[26].subfields[##ri##].fields[0].booleanFieldAction',
                          decorator: 'withBooleanActions',
                          wrapperLabel: 'ui-data-import.settings.mappingProfiles.map.administrativeData.field.selectCheckboxFieldMapping',
                        }],
                      }, {
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 4,
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.field.enumeration',
                          name: 'mappingDetails.mappingFields[26].subfields[##ri##].fields[1].value',
                        }],
                      }, {
                        controlType: 'Col',
                        staticControlType: 'Col',
                        xs: 4,
                        childControls: [{
                          controlType: 'Field',
                          staticControlType: 'KeyValue',
                          component: 'TextField',
                          label: 'ui-data-import.settings.mappingProfiles.map.field.chronology',
                          name: 'mappingDetails.mappingFields[26].subfields[##ri##].fields[2].value',
                        }],
                      }],
                    }],
                  }],
                }],
              }],
            }],
          }],
        }],
      }],
    }, { // mapping details Order section
      controlType: 'Row',
      staticControlType: 'Row',
      between: 'xs',
      id: 'mapping-details-order',
      sectionKey: 'mappingDetailsOrder',
      name: 'mappingDetailsOrder',
      classNames: [],
      dataAttributes: {},
      childControls: [{
        controlType: 'Col',
        staticControlType: 'Col',
        xs: 12,
        childControls: [{
          controlType: 'AccordionStatus',
          staticControlType: 'AccordionStatus',
          childControls: [{
            controlType: 'Row',
            staticControlType: 'Row',
            between: 'xs',
            childControls: [{
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'MappedHeader',
                staticControlType: 'MappedHeader',
                mappedLabelId: 'ui-data-import.settings.profiles.select.mappingProfiles',
                mappedLabel: 'Field mapping',
                mappableLabelId: 'ui-data-import.settings.mappingProfiles.map.order',
                mappableLabel: 'Holdings',
                headlineProps: { margin: 'small' },
              }],
            }, {
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'ExpandAllButton',
                staticControlType: 'ExpandAllButton',
              }],
            }],
          }],
        }],
      }],
    }, { // mapping details Invoice section
      controlType: 'Row',
      staticControlType: 'Row',
      between: 'xs',
      id: 'mapping-details-invoice',
      sectionKey: 'mappingDetailsInvoice',
      name: 'mappingDetailsInvoice',
      classNames: [],
      dataAttributes: {},
      childControls: [{
        controlType: 'Col',
        staticControlType: 'Col',
        xs: 12,
        childControls: [{
          controlType: 'AccordionStatus',
          staticControlType: 'AccordionStatus',
          childControls: [{
            controlType: 'Row',
            staticControlType: 'Row',
            between: 'xs',
            childControls: [{
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'MappedHeader',
                staticControlType: 'MappedHeader',
                mappedLabelId: 'ui-data-import.settings.profiles.select.mappingProfiles',
                mappedLabel: 'Field mapping',
                mappableLabelId: 'ui-data-import.settings.mappingProfiles.map.invoice',
                mappableLabel: 'Holdings',
                headlineProps: { margin: 'small' },
              }],
            }, {
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'ExpandAllButton',
                staticControlType: 'ExpandAllButton',
              }],
            }],
          }],
        }],
      }],
    }, { // mapping details MarcBib section
      controlType: 'Row',
      staticControlType: 'Row',
      between: 'xs',
      id: 'mapping-details-marc-bib',
      sectionKey: 'mappingDetailsMarcBib',
      name: 'mappingDetailsMarcBib',
      classNames: [],
      dataAttributes: {},
      childControls: [{
        controlType: 'Col',
        staticControlType: 'Col',
        xs: 12,
        childControls: [{
          controlType: 'AccordionStatus',
          staticControlType: 'AccordionStatus',
          childControls: [{
            controlType: 'Row',
            staticControlType: 'Row',
            between: 'xs',
            childControls: [{
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'MappedHeader',
                staticControlType: 'MappedHeader',
                mappedLabelId: 'ui-data-import.settings.profiles.select.mappingProfiles',
                mappedLabel: 'Field mapping',
                mappableLabelId: 'ui-data-import.settings.mappingProfiles.map.marcBib',
                mappableLabel: 'Holdings',
                headlineProps: { margin: 'small' },
              }],
            }],
          }, {
            controlType: 'MARCTable',
            staticControlType: 'Fragment',
            dataAttributes: {},
          }],
        }],
      }],
    }, { // mapping details MarcHoldings section
      controlType: 'Row',
      staticControlType: 'Row',
      between: 'xs',
      id: 'mapping-details-marc-holdings',
      sectionKey: 'mappingDetailsMarcHoldings',
      name: 'mappingDetailsMarcHoldings',
      classNames: [],
      dataAttributes: {},
      childControls: [{
        controlType: 'Col',
        staticControlType: 'Col',
        xs: 12,
        childControls: [{
          controlType: 'AccordionStatus',
          staticControlType: 'AccordionStatus',
          childControls: [{
            controlType: 'Row',
            staticControlType: 'Row',
            between: 'xs',
            childControls: [{
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'MappedHeader',
                staticControlType: 'MappedHeader',
                mappedLabelId: 'ui-data-import.settings.profiles.select.mappingProfiles',
                mappedLabel: 'Field mapping',
                mappableLabelId: 'ui-data-import.settings.mappingProfiles.map.marcHoldings',
                mappableLabel: 'Holdings',
                headlineProps: { margin: 'small' },
              }],
            }, {
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'ExpandAllButton',
                staticControlType: 'ExpandAllButton',
              }],
            }],
          }],
        }],
      }],
    }, { // mapping details MarcAuthority section
      controlType: 'Row',
      staticControlType: 'Row',
      between: 'xs',
      id: 'mapping-details-marc-authority',
      sectionKey: 'mappingDetailsMarcAuthority',
      name: 'mappingDetailsMarcAuthority',
      classNames: [],
      dataAttributes: {},
      childControls: [{
        controlType: 'Col',
        staticControlType: 'Col',
        xs: 12,
        childControls: [{
          controlType: 'AccordionStatus',
          staticControlType: 'AccordionStatus',
          childControls: [{
            controlType: 'Row',
            staticControlType: 'Row',
            between: 'xs',
            childControls: [{
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'MappedHeader',
                staticControlType: 'MappedHeader',
                mappedLabelId: 'ui-data-import.settings.profiles.select.mappingProfiles',
                mappedLabel: 'Field mapping',
                mappableLabelId: 'ui-data-import.settings.mappingProfiles.map.marcAuthority',
                mappableLabel: 'Holdings',
                headlineProps: { margin: 'small' },
              }],
            }, {
              controlType: 'Col',
              staticControlType: 'Col',
              childControls: [{
                controlType: 'ExpandAllButton',
                staticControlType: 'ExpandAllButton',
              }],
            }],
          }],
        }],
      }],
    }],
    // Common Layout:
    childControls: [{
      controlType: 'Headline',
      staticControlType: 'Fragment',
      id: 'profile-headline',
      size: 'xx-large',
      tag: 'h2',
      dataAttributes: { 'data-test-header-title': true },
    }, {
      controlType: 'AccordionSet',
      staticControlType: 'AccordionSet',
      dataAttributes: {},
      childControls: [{ // Summary accordion
        controlType: 'Accordion',
        staticControlType: 'Accordion',
        id: 'summary',
        collapsed: false,
        separator: true,
        label: 'ui-data-import.summary',
        dataAttributes: {},
        childControls: [{
          controlType: 'Fragment',
          staticControlType: 'ViewMetaData',
          id: 'section-metadata',
        }, {
          controlType: 'div',
          staticControlType: 'div',
          dataAttributes: { 'data-test-name-field': '' },
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            component: 'TextField',
            name: 'name',
            label: 'ui-data-import.name',
            required: true,
            validate: ['validateRequiredField'],
            dataAttributes: {},
          }],
        }, {
          controlType: 'div',
          staticControlType: 'div',
          dataAttributes: { 'data-test-incoming-record-type-field': '' },
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            component: 'Select',
            id: 'field-record-type-incoming',
            name: 'incomingRecordType',
            label: 'ui-data-import.incomingRecordType',
            placeholder: 'ui-data-import.chooseIncomingRecordType',
            required: true,
            dataOptions: [],
            validate: ['validateRequiredField'],
            dataAttributes: {},
          }],
        }, {
          controlType: 'div',
          staticControlType: 'div',
          dataAttributes: { 'data-test-folio-record-type-field': '' },
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            component: 'Select',
            id: 'field-record-type-existing',
            name: 'existingRecordType',
            label: 'ui-data-import.folioRecordType',
            placeholder: 'ui-data-import.chooseFolioRecordType',
            required: true,
            itemToString: null,
            dataOptions: [],
            validate: ['validateRequiredField'],
            dataAttributes: {},
          }],
        }, {
          controlType: 'div',
          staticControlType: 'div',
          dataAttributes: { 'data-test-description-field': '' },
          childControls: [{
            controlType: 'Field',
            staticControlType: 'KeyValue',
            component: 'TextArea',
            name: 'description',
            label: 'ui-data-import.description',
            validate: null,
            dataAttributes: {},
          }],
        }],
      }, { // Tags accordion
        controlType: 'Row',
        staticControlType: 'Row',
        between: 'xs',
        childControls: [{
          controlType: 'Col',
          staticControlType: 'Col',
          xs: 12,
          dataAttributes: { 'data-test-tags-accordion': '' },
          childControls: [{
            controlType: 'Fragment',
            staticControlType: 'TagsAccordion',
            id: 'mapping-tags',
          }],
        }],
      }, { // Details accordion
        controlType: 'Accordion',
        staticControlType: 'Accordion',
        id: 'mapping-profile-details',
        collapsed: false,
        separator: false,
        label: 'ui-data-import.details',
        dataAttributes: {},
        childControls: [{
          controlType: 'CommonSection',
          id: 'section-mapping-details',
          stateField: 'existingRecordType',
          sectionNamespace: '',
          acceptedSections: {
            ITEM: 'mappingDetailsItem',
            INSTANCE: 'mappingDetailsInstance',
            HOLDINGS: 'mappingDetailsHoldings',
            ORDER: 'mappingDetailsOrder',
            INVOICE: 'mappingDetailsInvoice',
            MARC_BIBLIOGRAPHIC: 'mappingDetailsMarcBib',
            MARC_HOLDINGS: 'mappingDetailsMarcHoldings',
            MARC_AUTHORITY: 'mappingDetailsMarcAuthority',
          },
        }],
      }, { // Associated action profile accordion
        controlType: 'Accordion',
        staticControlType: 'Accordion',
        id: 'mappingProfileFormAssociatedActionProfileAccordion',
        collapsed: false,
        separator: true,
        label: 'ui-data-import.settings.associatedActionProfiles',
        dataAttributes: {},
        childControls: [{
          controlType: 'ProfileAssociator',
          staticControlType: 'ProfileAssociator',
          id: 'mappingProfile.actionsAssociator',
          hasLoaded: true,
          isMultiSelect: true,
          isMultiLink: false,
        }],
      }],
    }],
  },
];
